!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var i=t();for(var n in i)("object"==typeof exports?exports:e)[n]=i[n]}}(self,(()=>(()=>{var e={170:()=>{AFRAME.registerPrimitive("a-puck",{defaultComponents:{puck:{}}}),AFRAME.registerComponent("puck",{init(){this.el.setAttribute("geometry","primitive: sphere; radius: 0.05"),this.el.setAttribute("material","color: red"),this.el.setAttribute("physx-body","type: dynamic"),this.el.setAttribute("networked","template: #ball-template")}})},626:()=>{AFRAME.registerComponent("display-room-key",{init(){this.el.setAttribute("text",`value: Room Key\n${ROOM_KEY}; align: center; wrapCount: 10`)}})},185:()=>{AFRAME.registerComponent("networking",{init(){this.el.setAttribute("networked-scene",`serverURL: air-hockey-naf-server.glitch.me;\n                          room: ${ROOM_KEY};\n                          adapter: wseasyrtc`)}})},410:()=>{AFRAME.registerComponent("spawn-balls",{init(){const e=this.el.sceneEl;e.querySelector("a-puck")||e.insertAdjacentHTML("beforeend",'<a-puck position="0 1.5 0"></a-puck>\n                  <a-puck position="0.01 1.8 -0.01"></a-puck>\n                  <a-puck position="0 2.2 0.01"></a-puck>')}})},911:()=>{AFRAME.registerComponent("spawn-in-circle",{schema:{radius:{type:"number",default:1}},init:function(){var e=this.el,t=e.getAttribute("position"),i=this.getRandomAngleInRadians(),n=this.randomPointOnCircle(this.data.radius,i),r={x:n.x+t.x,y:t.y,z:n.y+t.z};e.setAttribute("position",r)},getRandomAngleInRadians:function(){return Math.random()*Math.PI*2},randomPointOnCircle:function(e,t){return{x:Math.cos(t)*e,y:Math.sin(t)*e}}})}},t={};function i(n){var r=t[n];if(void 0!==r)return r.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,i),o.exports}return i(626),i(185),i(911),i(410),i(170),{}})()));
//# sourceMappingURL=air-hockey.min.js.map