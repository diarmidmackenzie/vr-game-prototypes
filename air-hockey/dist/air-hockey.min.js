!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(self,(()=>(()=>{var e={618:()=>{AFRAME.registerComponent("spawn-in-circle",{schema:{radius:{type:"number",default:1}},init:function(){var e=this.el,t=e.getAttribute("position"),n=this.getRandomAngleInRadians(),r=this.randomPointOnCircle(this.data.radius,n),i={x:r.x+t.x,y:t.y,z:r.y+t.z};e.setAttribute("position",i)},getRandomAngleInRadians:function(){return Math.random()*Math.PI*2},randomPointOnCircle:function(e,t){return{x:Math.cos(t)*e,y:Math.sin(t)*e}}})},626:()=>{AFRAME.registerComponent("display-room-key",{init(){this.el.setAttribute("text",`value: Room Key\n${ROOM_KEY}; align: center; wrapCount: 10`)}})},185:()=>{AFRAME.registerComponent("networking",{init(){this.el.setAttribute("networked-scene",`serverURL: air-hockey-naf-server.glitch.me;\n                          room: ${ROOM_KEY};\n                          adapter: wseasyrtc`)}})}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,n),o.exports}return n(626),n(185),n(618),{}})()));
//# sourceMappingURL=air-hockey.min.js.map